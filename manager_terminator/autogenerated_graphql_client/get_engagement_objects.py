# Generated by ariadne-codegen on 2025-02-11 14:25
# Source: queries.graphql

from datetime import datetime
from typing import List, Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class GetEngagementObjects(BaseModel):
    engagements: "GetEngagementObjectsEngagements"


class GetEngagementObjectsEngagements(BaseModel):
    objects: List["GetEngagementObjectsEngagementsObjects"]


class GetEngagementObjectsEngagementsObjects(BaseModel):
    validities: List["GetEngagementObjectsEngagementsObjectsValidities"]


class GetEngagementObjectsEngagementsObjectsValidities(BaseModel):
    org_unit: List["GetEngagementObjectsEngagementsObjectsValiditiesOrgUnit"]
    validity: "GetEngagementObjectsEngagementsObjectsValiditiesValidity"
    person: List["GetEngagementObjectsEngagementsObjectsValiditiesPerson"]


class GetEngagementObjectsEngagementsObjectsValiditiesOrgUnit(BaseModel):
    uuid: UUID


class GetEngagementObjectsEngagementsObjectsValiditiesValidity(BaseModel):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


class GetEngagementObjectsEngagementsObjectsValiditiesPerson(BaseModel):
    uuid: UUID
    engagements: List[
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagements"
    ]
    manager_roles: List[
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRoles"
    ]


class GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagements(BaseModel):
    uuid: UUID
    org_unit: List[
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsOrgUnit"
    ]
    validity: (
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsValidity"
    )


class GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsOrgUnit(
    BaseModel
):
    uuid: UUID


class GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsValidity(
    BaseModel
):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


class GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRoles(BaseModel):
    uuid: UUID
    org_unit: List[
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesOrgUnit"
    ]
    validity: (
        "GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesValidity"
    )


class GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesOrgUnit(
    BaseModel
):
    uuid: UUID


class GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesValidity(
    BaseModel
):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


GetEngagementObjects.update_forward_refs()
GetEngagementObjectsEngagements.update_forward_refs()
GetEngagementObjectsEngagementsObjects.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValidities.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesOrgUnit.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesValidity.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPerson.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagements.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsOrgUnit.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonEngagementsValidity.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRoles.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesOrgUnit.update_forward_refs()
GetEngagementObjectsEngagementsObjectsValiditiesPersonManagerRolesValidity.update_forward_refs()
